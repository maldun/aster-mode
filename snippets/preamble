# preamble --- Aster Mode (snippet)
#

# Maintainer: Stefan Reiterer <stefan.harald.reiterer@gmail.com>
# Keywords: languages, processes, python, oop, Code_Aster

# Copyright (C) 2014  Stefan Reiterer

# Author: 2014 Stefan Reiterer
#    
# This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.


# name: preamble
# group: macro
# key: preamble
# --
import sys, os

# Assuming module is in home directory

sys.path.append(os.path.expanduser("~/prog/Python/"))

from UnitCalculator import *
auto_converter(mmNS)

from itertools import chain

def create_list_for_function(x,y):

    zipped = zip(x,y)
    return tuple(chain(*zipped))

from Utilitai.partition import *

def process_group_list(liste,prefix):
    return tuple([prefix + str(x) for x in liste])    
    
def process_fonction(list_x,list_y,unit_x = None,unit_y = None):
    if len(list_x) != len(list_y):
        raise Exception
            
    if unit_x is None:
        unit_x = 1.0
    if unit_y is None:
        unit_y = 1.0
                    
    result = []
    for i in range(len(list_x)):
        result += [list_x[i]*unit_x,list_y[i]*unit_y]
                        
    return tuple(result)
